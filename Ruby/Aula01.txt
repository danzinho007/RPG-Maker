Sites :

Aula 01 :
https://centrorpg.com/index.php?PHPSESSID=9d18137711f67a4b6168fc5880185695&topic=16769.msg127696#msg127696

https://www.youtube.com/watch?v=VJ-M7O3qJkQ

Comentários
Não são executados

# Comentário

% Comentário

=begin
Comentário
Comentário
=end

Aula 02 :

Variáveis
Pode guardar uma ou várias informações

number = 10 
string = "Texto"
symbol = :symbol
bool = true
bool = false

Aula 03 
https://www.youtube.com/watch?v=FCCZuwDleRM

Operações com variáveis :

# Pode ser usada onde foi criada e alterada :
local = 10 
# Pode ser usada em qualquer lugar :
%global = "Global"

# Printar o número 10 :
number = 10
p number

# Operações com variáveis  :
p number + 5 # Adição
p number += 5 
p number - 5 # Subtração
p number * 5 # Multiplicação
p number / 5 # Divisão
p number % 5 # Resto da Divisão

Aula 04 :
https://www.youtube.com/watch?v=gGq16NtCLQc

Condições com If, Else e Elsif :

Operadores Relacionais :

Igual : =
Diferente : <> ou #
Maior que : >
Menor que : <
Maior ou igual : >=
Menor ou igual : <=

Operadores Lógicos :
E : AND
Ou : OR
Não : NOT

Verdadeiro ou Falso = V ou F :
Pro "AND" = Só vai ser V se os 2 forem V, caso contrário será F
Pro "OR" = Se algum for V, vai ser V
Pro "NOT" = Não V é F, não F é V

Aual 05 : Case e Métodos
https://www.youtube.com/watch?v=ksMjJ73TyJM

player_health = 100
caso player_health
when 100
    p "O jogador está com a vida cheia"
when 50
    p "O jogador está com metade da vida"
when 0
    p "O jogador morreu"
elsen
    p "Bugou"
end

Aula 06 : Métodos / Funções
https://www.youtube.com/watch?v=ksMjJ73TyJM

Método 
Será executado quando quiser, basta chamar
Deve passar algum argumento
Pode ser mais de 1 argumento
Deve começar com letras minúsculas 

def say_hello
    p "Hello"
end

Chamando o método :
say_hello

Aula 07 : Métodos e seus argumentos
https://www.youtube.com/watch?v=LigsXRZzNbE

Criando um método com argumento chamado something :

def say(something)
    p something
end

Passando uma variável / valor pro método :
say("Oi, eu sou o Goku")


Criando um método com 2 argumentos :

player1_name = "Erik"
player2_name = "Alex"

def change_player_name (player, new_name)
    if player == "Player 1"
        player1_name = new_name
    else
        player2_name = new_name
    end
end

# Chamando o método e atribuindo valor pro Player 1 : 

change_player_name("Player 1", "Caped Baldy")

# Criando um método com 2 argumentos, porém espeficando o primeiro argumento :

layer1_name = "Erik"
player2_name = "Alex"

def change_player_name (player, new_name = "Caped Baldy")
    if player == "Player 1"
        player1_name = new_name
    else
        player2_name = new_name
    end
end

# Chamando o método apenas usando o argumento : 

change_player_name ("Player 1")


Aula 08 : Return ( Vídeo 6 )
https://www.youtube.com/watch?v=CNfiivRmT8o

Return 
Serve pra sair de um método, ignorando o resto do código

def Hi
    p "Este código será executado"
    return
    p "Esse aqui não"
end

Hi

# Criando um método que verifica se o jogador tem pelo menos 1 carta, caso tenha escreva "É hora do duelo" :

player_cards = 0

def start_battle
    if player_cards <= 0
        return
    else
    p "É hora do duelo"
    end
end

start_battle

Se o jogador : 
tiver menos que 0 carta vai retornar
tiver 0 carta vai retornar
tiver 1 carta vai escrever "É hora do duelo"

# Crie um método que veja a máxima pontuação de um minigame :

def max_minigame_score
    return 100
end

p max_minigame_score

# Criando um método com várias condições : 

player_health = 0
player_lives = 1
enemy_health = 100

def can_call_gameover?
    return false if player_lives > 0
    return false if player_health > 0
    return false if player_health <= 0 && enemy_health <= 0
    return false if enemy_health <= 0
    return true
end

p can_call_gameover

# 1-O número de vidas do jogador é maior que 0 ? Sim, logo vai retornar Falso
# 2- O número de vida do jogador é maior que 0 ? Não, logo vai retornar Falso
# 3.1- O número de vida do jogador é menor ou igual que 0 ? Sim
# 3.2- O número de vida do inimigo é menor ou igual que 0 ? não,
# 3- V e F é Falso
# 4- A vidade do inimigo é menor ou igual que 0 ? Não

p can_call_gameover

Aula 09 : Arrays ( Vìdeo 07 )
https://www.youtube.com/watch?v=EMYRmJkPQH4

Array
Criado pra armazenar vários valores
Cada item dentro de um array é chamado de elemento
Pode alterar qualquer item igual variável

Sendo o array :
array = [10, 20, "Jon Snow"]

Obtendo elemento do array : array[index]
array[0] # 10
array[1] # 20
array[2] # "Jon Snow"

E se colassemos -1, -2 e -3 ?
array[-1] # "Jon Snow"
array[-2] # 20
array[-3] # 10

Alterando elemento do array :

array = [10, 20, "Jon Snow"]
array[0] = "Dez"
p array[0] # "Dez"

--------------------------


Outros :

https://centrorpg.com/index.php?topic=2075.0

https://depositodesistemasml.blogspot.com/2013/12/o-rpgmaker-testes-e-editor-de-scripts.html

https://forums.rpgmakerweb.com/index.php?forums/learning-ruby-and-rgssx.33/page-41

https://makerpedia.fandom.com/pt-br/wiki/Ruby_Game_Scripting_System

https://rmrk.net/index.php?PHPSESSID=pl09l7jr35atu7caec6p53ug1r&topic=43380.0

https://www.rpg-maker.fr/dl/monos/aide/xp/index.html?page=source%2Frgss%2Frgss.html

https://rpgm.fandom.com/wiki/Ruby_Game_Scripting_System

https://www.rpgmaker.net/articles/1351/

https://www.sergiotoledo.com.br/videos/tutorial-ruby-aula-1:-criando-um-jogo

https://www.youtube.com/watch?v=scO0nHl3gK4


